// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspNETuniversity.Models;

#nullable disable

namespace aspNETuniversity.Migrations
{
    [DbContext(typeof(univerContext))]
    partial class univerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("aspNETuniversity.Models.AverageSalarySmaller", b =>
                {
                    b.Property<int?>("AverageSalaryForOnePeople")
                        .HasColumnType("int")
                        .HasColumnName("average_salary_for_one_people");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.ToView("average_salary_smaller");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("faculty_code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyCode"), 1L, 1);

                    b.Property<string>("DeanName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dean_name");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("faculty_name");

                    b.HasKey("FacultyCode");

                    b.HasIndex(new[] { "FacultyName" }, "UC_faculty_name")
                        .IsUnique();

                    b.HasIndex(new[] { "FacultyName" }, "indx_name");

                    b.ToTable("facultys", (string)null);
                });

            modelBuilder.Entity("aspNETuniversity.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Specialization", b =>
                {
                    b.Property<int>("SpecCode")
                        .HasColumnType("int")
                        .HasColumnName("spec_code");

                    b.Property<string>("Cvalification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cvalification");

                    b.Property<int>("FacultyCode")
                        .HasColumnType("int")
                        .HasColumnName("faculty_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("SpecCode");

                    b.HasIndex(new[] { "Name" }, "UC_spec_name")
                        .IsUnique();

                    b.HasIndex(new[] { "FacultyCode" }, "indx_faculty_code");

                    b.ToTable("specializations", (string)null);
                });

            modelBuilder.Entity("aspNETuniversity.Models.Student", b =>
                {
                    b.Property<int>("Zachetka")
                        .HasColumnType("int")
                        .HasColumnName("zachetka");

                    b.Property<byte?>("FamilyKol")
                        .HasColumnType("tinyint")
                        .HasColumnName("family_kol");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("SalaryFather")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("salary_father")
                        .HasDefaultValueSql("((13000))");

                    b.Property<int?>("SalaryMother")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("salary_mother")
                        .HasDefaultValueSql("((13000))");

                    b.Property<string>("StudGroupCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("stud_group_code");

                    b.HasKey("Zachetka");

                    b.HasIndex(new[] { "StudGroupCode" }, "indx_group");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("aspNETuniversity.Models.StudentsAndAverageSalary", b =>
                {
                    b.Property<string>("Asname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asname");

                    b.Property<int?>("AverageGroupSalary")
                        .HasColumnType("int")
                        .HasColumnName("average_group_salary");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("faculty_name");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("specialization_name");

                    b.ToView("students_and_average_salary");
                });

            modelBuilder.Entity("aspNETuniversity.Models.StudentsAndAverageSalaryWithFunction", b =>
                {
                    b.Property<int?>("AverageGroupSalary")
                        .HasColumnType("int")
                        .HasColumnName("average_group_salary");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("faculty_name");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("specialization_name");

                    b.Property<int>("Zachetka")
                        .HasColumnType("int")
                        .HasColumnName("zachetka");

                    b.ToView("students_and_average_salary_with_function");
                });

            modelBuilder.Entity("aspNETuniversity.Models.StudGroup", b =>
                {
                    b.Property<string>("StudGroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("stud_group_code");

                    b.Property<int?>("SpecializationCode")
                        .HasColumnType("int")
                        .HasColumnName("specialization_code");

                    b.Property<short>("Year")
                        .HasColumnType("smallint")
                        .HasColumnName("year");

                    b.HasKey("StudGroupCode");

                    b.HasIndex(new[] { "SpecializationCode" }, "indx_spec");

                    b.ToTable("stud_groups", (string)null);
                });

            modelBuilder.Entity("aspNETuniversity.Models.UniversityAudit", b =>
                {
                    b.Property<string>("EditBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasDefaultValueSql("(original_login())");

                    b.Property<DateTime?>("EventDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("eventDateTime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("EventName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("eventName");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.ToTable("universityAudit", (string)null);
                });

            modelBuilder.Entity("aspNETuniversity.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Specialization", b =>
                {
                    b.HasOne("aspNETuniversity.Models.Faculty", "FacultyCodeNavigation")
                        .WithMany("Specializations")
                        .HasForeignKey("FacultyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_specializations_facultys");

                    b.Navigation("FacultyCodeNavigation");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Student", b =>
                {
                    b.HasOne("aspNETuniversity.Models.StudGroup", "StudGroupCodeNavigation")
                        .WithMany("Students")
                        .HasForeignKey("StudGroupCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_students_stud_groups");

                    b.Navigation("StudGroupCodeNavigation");
                });

            modelBuilder.Entity("aspNETuniversity.Models.StudGroup", b =>
                {
                    b.HasOne("aspNETuniversity.Models.Specialization", "SpecializationCodeNavigation")
                        .WithMany("StudGroups")
                        .HasForeignKey("SpecializationCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_stud_groups_specializations");

                    b.Navigation("SpecializationCodeNavigation");
                });

            modelBuilder.Entity("aspNETuniversity.Models.User", b =>
                {
                    b.HasOne("aspNETuniversity.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Faculty", b =>
                {
                    b.Navigation("Specializations");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("aspNETuniversity.Models.Specialization", b =>
                {
                    b.Navigation("StudGroups");
                });

            modelBuilder.Entity("aspNETuniversity.Models.StudGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
